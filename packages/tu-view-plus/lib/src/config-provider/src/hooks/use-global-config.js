"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("vue"),f=require("../constants.js"),s=require("@tu-view-plus/hooks"),a=require("@tu-view-plus/utils"),l=e.ref(),g=(r,o)=>{const i=[...new Set([...a.keysOf(r),...a.keysOf(o)])],n={};for(const t of i)n[t]=o[t]??r[t];return n};function v(r,o=void 0){const i=e.getCurrentInstance()?e.inject(f.configProviderContextKey,l):l;return r?e.computed(()=>{var n;return((n=i.value)==null?void 0:n[r])??o}):i}const C=(r,o,i=!1)=>{const n=!!e.getCurrentInstance(),t=n?v():void 0,c=(o==null?void 0:o.provide)??(n?e.provide:void 0);if(!c){a.debugWarn("provideGlobalConfig","provideGlobalConfig() can only be used inside setup().");return}const u=e.computed(()=>{const d=e.unref(r);return t!=null&&t.value?g(t.value,d):d});return c(f.configProviderContextKey,u),c(s.localeContextKey,e.computed(()=>u.value.locale)),c(s.namespaceContextKey,e.computed(()=>u.value.namespace)),c(s.zIndexContextKey,e.computed(()=>u.value.zIndex)),c(s.SIZE_INJECTION_KEY,{size:e.computed(()=>u.value.size||"")}),(i||!l.value)&&(l.value=u.value),u};exports.provideGlobalConfig=C;exports.useGlobalConfig=v;
