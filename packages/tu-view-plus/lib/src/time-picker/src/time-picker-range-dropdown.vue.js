"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const t=require("vue"),u=require("./time-picker-range-dropdown.js"),v=require("./time-picker-dropdown.vue.js"),a=require("@tu-view-plus/utils"),_=require("./utils.js");require("../style/time-picker.css");const g=t.defineComponent({name:"TuTimePickerRangeDropdown"}),w=t.defineComponent({...g,props:u.timePickerRangeDropdownProps,emits:u.timePickerRangeDropdownEmits,setup(l,{emit:c}){const d=l,i=c,{value:e,displayIndex:s}=t.toRefs(d),o=t.ref(s.value),p=t.computed(()=>e!=null&&e.value?e.value[o.value]:void 0),m=n=>{const r=a.isUndefined(e)||a.isUndefined(e==null?void 0:e.value)?[]:[...e.value];r[o.value]=n,i("select",r)},f=()=>{if(_.isValidRangeValue(e==null?void 0:e.value))i("confirm",e==null?void 0:e.value);else{const n=(o.value+1)%2;o.value=n,i("display-index-change",n),i("update:displayIndex",n)}};return t.watch(s,()=>{o.value=s.value}),(n,r)=>(t.openBlock(),t.createBlock(v.default,t.mergeProps(n.$attrs,{"is-range":!0,value:p.value,size:n.size,onSelect:m,onConfirm:f}),{default:t.withCtx(()=>[t.renderSlot(n.$slots,"default")]),_:3},16,["value","size"]))}});exports.default=w;
