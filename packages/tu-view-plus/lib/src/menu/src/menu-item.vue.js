"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("vue"),I=require("./menu-item.js"),b=require("./hooks/use-level.js"),k=require("./hooks/use-menu-context.js"),g=require("./hooks/use-menu-data-collector.js"),x=require("@tu-view-plus/utils"),N=require("./hooks/use-menu.js"),V=require("@tu-view-plus/hooks"),E=require("scroll-into-view-if-needed"),S=require("./menu-indent.vue.js"),w=require("../../tooltip/index.js");require("../style/menu.css");const y=e.defineComponent({name:"TuMenuItem",inheritAttrs:!1,props:I.menuItemProps,emits:I.menuItemEmits,setup(t,{emit:c}){const{key:i}=N.useMenu(),{level:d}=b.useLevel(),n=k.useMenuContext(),u=e.ref(),s=e.computed(()=>(n.selectedKeys||[]).indexOf(i.value)>-1),o=g.useMenuDataCollectorContext();e.onMounted(()=>{o==null||o.collectMenuItem(i.value)}),e.onUnmounted(()=>{o==null||o.removeMenuItem(i.value)});function r(){n.autoScrollIntoView&&u.value&&s.value&&E(u.value,{behavior:"smooth",block:"nearest",scrollMode:"if-needed",boundary:document.documentElement,...n.scrollConfig||{}})}let l;return e.onMounted(()=>{l=setTimeout(()=>{r()},500)}),e.onUnmounted(()=>{clearTimeout(l)}),e.watch([s],()=>{r()}),{menuContext:n,level:d,isSelected:s,refItemElement:u,onClick(m){t.disabled||(n.onMenuItemClick&&n.onMenuItemClick(i.value),c("click",m))}}},render(){var p,h;const t=V.useNamespace("menu"),{level:c,menuContext:i,disabled:d,isSelected:n,onClick:u}=this,{collapsed:s,inTrigger:o,mode:r,tooltipProps:l}=i,m=s&&!o&&c===1,q=r==="vertical"&&c>1,f=((h=(p=this.$slots).default)==null?void 0:h.call(p))||[],v=q&&!o&&!s,a=this.$slots.icon&&this.$slots.icon(),C=[v&&e.createVNode(S.default,{level:c},null),a&&e.createVNode("span",{class:t.e("icon")},[a]),!s&&(v||a?e.createVNode("span",{class:[t.e("item-inner"),t.is("title",!!a)]},[f]):f)].filter(Boolean),M=e.createVNode("div",e.mergeProps({ref:"refItemElement",class:[t.e("item"),t.is("disabled",d),t.is("selected",n),t.is("has-icon",!!a)]},this.$attrs,{onClick:u}),[C,n&&r==="horizontal"&&e.createVNode("div",{class:t.e("selected-label")},null)]);if(m){const T=[t.e("item-tooltip"),l==null?void 0:l.class];return e.createVNode(w.TuTooltip,e.mergeProps({position:"right",class:T},x.omit(l||{},["class"])),{default:()=>M,content:()=>f})}return M}});exports.default=y;
