"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("vue"),d=require("./tree-select-dropdown.js"),h=require("@tu-view-plus/hooks"),m=require("../../tree/index.js"),w=require("../../scrollbar/index.js");require("../style/tree-select.css");const T=e.defineComponent({name:"TuTabs",props:d.treeSelectDropdownProps,emits:d.treeSelectDropdownEmits,setup(s,{emit:c,slots:g}){const{showCheckable:o,selectedKeys:n,treeProps:i}=e.toRefs(s),l=h.useNamespace("tree-select"),u=e.ref(),p=e.computed(()=>({...i.value,disableSelectActionOnly:!0,checkedKeys:o.value?n.value:[],selectedKeys:o.value?[]:n.value})),v=(t,f)=>{var r,a;o.value?(a=(r=u.value)==null?void 0:r.toggleCheck)==null||a.call(r,t[0],f):c("change",t)},S=t=>{c("change",t)};return()=>e.createVNode(w.TuScrollbar,{"wrap-class":l.e("dropdown-wrap"),"view-class":l.e("dropdown-list")},{default:()=>[e.createVNode(m.TuTree,e.mergeProps({ref:u,onSelect:v,onCheck:S},p.value),s.treeSlots)]})}});exports.default=T;
