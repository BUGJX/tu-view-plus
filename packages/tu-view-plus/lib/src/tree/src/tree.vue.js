"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const s=require("vue"),Y=require("./tree.js"),v=require("@tu-view-plus/hooks"),i=require("@tu-view-plus/utils");require("../../form/index.js");const Ge=require("./hooks/use-checked-state.js"),Je=require("./context.js"),Qe=require("./hooks/use-tree-data.js"),E=require("./utils/check-utils.js"),C=require("./utils/index.js"),We=require("../../virtual-list/index.js"),Z=require("./tree-node.vue.js");require("../style/tree.css");const Xe=require("../../form/src/hooks/use-form-props.js"),Ye=s.defineComponent({name:"TuTree"}),Ze=s.defineComponent({...Ye,props:Y.treeProps,emits:Y.treeEmits,setup(ee,{expose:te,emit:ne}){const R=ee,l=ne,y=s.useSlots(),{data:oe,showLine:z,multiple:B,loadMore:k,checkStrictly:w,checkedKeys:ae,defaultCheckedKeys:ce,selectedKeys:se,defaultSelectedKeys:q,expandedKeys:re,defaultExpandedKeys:T,checkedStrategy:de,selectable:le,checkable:V,blockNode:ue,fieldNames:ie,defaultExpandAll:ve,filterTreeNode:K,draggable:fe,allowDrop:D,defaultExpandSelected:j,defaultExpandChecked:H,autoExpandParent:pe,halfCheckedKeys:he,onlyCheckLeaf:ge,animation:ye}=s.toRefs(R),P=v.useNamespace("tree"),ke=Xe.useFormSize(),Ke=s.computed(()=>({[P.b()]:!0,[P.m(ke.value)]:!0,[P.is("checkable")]:V.value,[P.is("show-line")]:z.value})),Ne=v.usePickSlots(y,"switcher-icon"),Se=v.usePickSlots(y,"loading-icon"),xe=v.usePickSlots(y,"drag-icon"),me=v.usePickSlots(y,"icon"),Ee=v.usePickSlots(y,"title"),Ce=v.usePickSlots(y,"extra"),{treeData:we,flattenTreeData:L,key2TreeNode:r}=Qe.useTreeData(s.reactive({treeData:oe,selectable:le,showLine:z,blockNode:ue,checkable:V,fieldNames:ie,loadMore:k,draggable:fe})),{checkedKeys:N,indeterminateKeys:b,setCheckedState:_}=Ge.useCheckedState(s.reactive({defaultCheckedKeys:ce,checkedKeys:ae,checkStrictly:w,key2TreeNode:r,halfCheckedKeys:he,onlyCheckLeaf:ge})),[x,I]=v.useMergeState((q==null?void 0:q.value)||[],s.reactive({value:se})),h=s.ref([]),S=s.ref(),A=s.ref();function Te(){if(T!=null&&T.value){const e=new Set([]);return T.value.forEach(t=>{if(e.has(t))return;const n=r.value.get(t);n&&[...pe.value?n.pathParentKeys:[],t].forEach(o=>e.add(o))}),[...e]}if(ve.value)return L.value.filter(e=>e.children&&e.children.length).map(e=>e.key);if(j.value||H.value){const e=new Set([]),t=n=>{n.forEach(o=>{const a=r.value.get(o);a&&(a.pathParentKeys||[]).forEach(c=>e.add(c))})};return j.value&&t(x.value),H.value&&t(N.value),[...e]}return[]}const[m,F]=v.useMergeState(Te(),s.reactive({value:re})),g=s.ref([]),$=s.computed(()=>{const e=new Set(m.value),t=new Set(g.value);return L.value.filter(n=>{var d;if(!(!K||!K.value||(K==null?void 0:K.value(n.treeNodeData))))return!1;const a=i.isUndefined(n.parentKey),c=(d=n.pathParentKeys)==null?void 0:d.every(u=>e.has(u)&&!t.has(u));return a||c})});function G(e,t=de.value){let n=[...e];return t==="parent"?n=e.filter(o=>{const a=r.value.get(o);return a&&!(!i.isUndefined(a.parentKey)&&e.includes(a.parentKey))}):t==="child"&&(n=e.filter(o=>{var a,c;return!((c=(a=r.value.get(o))==null?void 0:a.children)!=null&&c.length)})),n}function f(e){return e.map(t=>{var n;return((n=r.value.get(t))==null?void 0:n.treeNodeData)||void 0}).filter(Boolean)}function U(e){const{targetKey:t,targetChecked:n,newCheckedKeys:o,newIndeterminateKeys:a,event:c}=e,d=t?r.value.get(t):void 0,u=G(o);l("update:checkedKeys",u),l("update:halfCheckedKeys",a),l("check",u,{checked:n,node:d==null?void 0:d.treeNodeData,checkedNodes:f(u),halfCheckedKeys:a,halfCheckedNodes:f(a),e:c})}function M(e){const{targetKey:t,targetSelected:n,newSelectedKeys:o,event:a}=e,c=t?r.value.get(t):void 0;l("update:selectedKeys",o),l("select",o,{selected:n,node:c==null?void 0:c.treeNodeData,selectedNodes:f(o),e:a})}function O(e){const{targetKey:t,targetExpanded:n,newExpandedKeys:o,event:a}=e,c=t?r.value.get(t):void 0;l("expand",o,{expanded:n,node:c==null?void 0:c.treeNodeData,expandedNodes:f(o),e:a}),l("update:expandedKeys",o)}function De(e){const[t,n]=_(e,[],!0);U({newCheckedKeys:t,newIndeterminateKeys:n})}function Pe(e){let t=e;!B.value&&e.length>1&&(t=[e[0]]),I(t),M({newSelectedKeys:t})}function be(e){g.value=[],F(e),O({newExpandedKeys:e})}function Be(e,t,n){if(!e.length)return;let o=[...N.value],a=[...b.value];e.forEach(c=>{const d=r.value.get(c);d&&([o,a]=E.getCheckedStateByCheck({node:d,checked:t,checkedKeys:[...o],indeterminateKeys:[...a],checkStrictly:w.value}))}),_(o,a),U({targetKey:n,targetChecked:i.isUndefined(n)?void 0:t,newCheckedKeys:o,newIndeterminateKeys:a})}function qe(e,t,n){if(!e.length)return;let o;if(B.value){const a=new Set(x.value);e.forEach(c=>{t?a.add(c):a.delete(c)}),o=[...a]}else o=t?[e[0]]:[];I(o),M({targetKey:n,targetSelected:i.isUndefined(n)?void 0:t,newSelectedKeys:o})}function Le(e,t,n){const o=new Set(m.value);e.forEach(c=>{t?o.add(c):o.delete(c),W(c)});const a=[...o];F(a),O({targetKey:n,targetExpanded:i.isUndefined(n)?void 0:t,newExpandedKeys:a})}function J(e,t,n){const o=r.value.get(t);if(!o)return;const[a,c]=E.getCheckedStateByCheck({node:o,checked:e,checkedKeys:N.value,indeterminateKeys:b.value,checkStrictly:w.value});_(a,c),U({targetKey:t,targetChecked:e,newCheckedKeys:a,newIndeterminateKeys:c,event:n})}function _e(e,t){if(!r.value.get(e))return;let o,a;if(B.value){const c=new Set(x.value);a=!c.has(e),a?c.add(e):c.delete(e),o=[...c]}else a=!0,o=[e];I(o),M({targetKey:e,targetSelected:a,newSelectedKeys:o,event:t})}function Q(e,t,n){if(g.value.includes(t)||!r.value.get(t))return;const a=new Set(m.value);e?a.add(t):a.delete(t);const c=[...a];F(c),ye.value&&g.value.push(t),O({targetKey:t,targetExpanded:e,newExpandedKeys:c,event:n})}function W(e){const t=g.value.indexOf(e);g.value.splice(t,1)}const Ie=s.computed(()=>k!=null&&k.value?async e=>{if(!i.isFunction(k.value))return;const t=r.value.get(e);if(!t)return;const{treeNodeData:n}=t;h.value=[...new Set([...h.value,e])];try{await k.value(n),h.value=h.value.filter(o=>o!==e),Q(!0,e),N.value.includes(e)&&J(!0,e)}catch(o){h.value=h.value.filter(a=>a!==e),console.error("[tree]load data error: ",o)}}:void 0),p=s.reactive({treeProps:R,switcherIcon:Ne,loadingIcon:Se,dragIcon:xe,nodeIcon:me,nodeTitle:Ee,nodeExtra:Ce,treeData:we,flattenTreeData:L,key2TreeNode:r,checkedKeys:N,indeterminateKeys:b,selectedKeys:x,expandedKeys:m,loadingKeys:h,currentExpandKeys:g,onLoadMore:Ie,filterTreeNode:K,onCheck:J,onSelect:_e,onExpand:Q,onExpandEnd:W,allowDrop(e,t){const n=r.value.get(e);return n&&i.isFunction(D==null?void 0:D.value)?!!D.value({dropNode:n.treeNodeData,dropPosition:t}):!0},onDragStart(e,t){const n=r.value.get(e);S.value=n,n&&l("dragStart",t,n.treeNodeData)},onDragEnd(e,t){const n=r.value.get(e);S.value=void 0,n&&l("dragEnd",t,n.treeNodeData)},onDragOver(e,t){const n=r.value.get(e);n&&l("dragOver",t,n.treeNodeData)},onDragLeave(e,t){const n=r.value.get(e);n&&l("dragLeave",t,n.treeNodeData)},onDrop(e,t,n){const o=r.value.get(e);S.value&&o&&!(o.key===S.value.key||o.pathParentKeys.includes(S.value.key||""))&&l("drop",{e:n,dragNode:S.value.treeNodeData,dropNode:o.treeNodeData,dropPosition:t})}});s.provide(Je.TreeInjectionKey,p);function Ae(e,t){const{key2TreeNode:n,onCheck:o,checkedKeys:a}=p,c=!a.includes(e),d=n.get(e);d&&E.isNodeCheckable(d)&&o(c,e,t)}function Fe(e){A.value&&A.value.scrollTo(e)}function Ue(){return f(x.value)}function Me(e={}){const{checkedStrategy:t,includeHalfChecked:n}=e,o=G(N.value,t);return[...f(o),...n?X():[]]}function X(){return f(b.value)}function Oe(){return f(m.value)}function Re(e=!0){const{key2TreeNode:t}=p,n=e?[...t.keys()].filter(o=>{const a=t.get(o);return a&&E.isNodeCheckable(a)}):[];De(n)}function ze(e,t=!0,n=!1){const{key2TreeNode:o}=p,a=i.isArray(e),c=(a?e:[e]).filter(d=>{const u=o.get(d);return u&&E.isNodeCheckable(u)&&(w.value||!n||C.isLeafNode(u))});Be(c,t,a?void 0:e)}function Ve(e=!0){const{key2TreeNode:t}=p,n=e?[...t.keys()].filter(o=>{const a=t.get(o);return a&&C.isNodeSelectable(a)}):[];Pe(n)}function je(e,t=!0){const{key2TreeNode:n}=p,o=i.isArray(e),a=(o?e:[e]).filter(c=>{const d=n.get(c);return d&&C.isNodeSelectable(d)});qe(a,t,o?void 0:e)}function He(e=!0){const{key2TreeNode:t}=p,n=e?[...t.keys()].filter(o=>{const a=t.get(o);return a&&C.isNodeExpandable(a)}):[];be(n)}function $e(e,t=!0){const{key2TreeNode:n}=p,o=i.isArray(e),a=(o?e:[e]).filter(c=>{const d=n.get(c);return d&&C.isNodeExpandable(d)});Le(a,t,o?void 0:e)}return te({toggleCheck:Ae,scrollIntoView:Fe,getSelectedNodes:Ue,getCheckedNodes:Me,getHalfCheckedNodes:X,getExpandedNodes:Oe,checkAll:Re,checkNode:ze,selectAll:Ve,selectNode:je,expandAll:He,expandNode:$e}),(e,t)=>(s.openBlock(),s.createElementBlock("div",{class:s.normalizeClass(Ke.value)},[e.virtualListProps?(s.openBlock(),s.createBlock(s.unref(We.TuVirtualList),s.mergeProps({key:0,ref_key:"virtualListRef",ref:A},e.virtualListProps,{data:$.value}),{item:s.withCtx(({item:n})=>[(s.openBlock(),s.createBlock(Z.default,s.mergeProps(n.treeNodeProps,{key:n.key}),null,16))]),_:1},16,["data"])):(s.openBlock(!0),s.createElementBlock(s.Fragment,{key:1},s.renderList($.value,n=>(s.openBlock(),s.createBlock(Z.default,s.mergeProps(n.treeNodeProps,{key:n.key}),null,16))),128))],2))}});exports.default=Ze;
