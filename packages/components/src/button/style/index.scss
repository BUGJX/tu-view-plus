@use 'sass:map';

@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;

$tu-button-padding-map: (
  xs: 3px 10px,
  sm: 3px 10px,
  md: 9px 20px,
  lg: 9px 20px
);

$button-icon-gap-map: (
  xs: 2px,
  sm: 4px,
  md: 6px,
  lg: 8px
);

@mixin button-fill($color-light, $color, $color-dark) {
  box-shadow: inset 2px 2px 8px $color-light, inset -2px -2px 8px $color-dark,
    $tu-shadow-outside;
  background-color: $color;
  color: $tu-slate-10;

  & [class*='#{$namespace}-icon'] {
    color: $tu-slate-10;
  }

  &:hover {
    &,
    [class*='#{$namespace}-icon'] {
      color: $tu-white-0;
    }
  }

  &:active {
    box-shadow: inset 2px 2px 8px $color-dark, inset -2px -2px 8px $color-light;
  }
}

@include b(button) {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: map-get($tu-button-padding-map, 'md');
  background-color: transparent;
  color: $tu-color-text;
  white-space: nowrap;
  line-height: 1;
  cursor: pointer;
  outline: none;
  user-select: none;
  border: none;
  vertical-align: middle;
  text-align: center;
  box-sizing: border-box;
  border-radius: $tu-border-radius;
  font-weight: $tu-font-content-weight;
  font-size: $tu-font-size-md;
  -webkit-appearance: none;
  transition: color 0.2s;

  & + & {
    margin-left: 12px;
  }

  & [class*='#{$namespace}-icon'] {
    transition: color 0.2s;
    & + span {
      margin-left: map-get($button-icon-gap-map, 'md');
    }
  }

  @include when(disabled) {
    &,
    &:hover,
    &:focus {
      cursor: not-allowed;
      box-shadow: none;
      opacity: 0.7;
    }
  }

  @include when(round) {
    border-radius: $tu-border-radius-full;
  }

  @include when(circle) {
    border-radius: 50%;
  }

  @include m(default) {
    box-shadow: $tu-shadow-outside;

    &:hover:not(.is-disabled) {
      color: $tu-color-primary;
      > i {
        color: $tu-color-primary;
      }
    }

    &:active {
      box-shadow: $tu-shadow-inside;
    }

    &.is-disabled {
      background-color: $tu-color-base-bg;
    }
  }

  @include m(text) {
    color: $tu-color-primary;

    &:hover {
      color: $tu-color-primary-dark;
    }
  }

  @include m(primary) {
    @include button-fill(
      $tu-color-primary-light,
      $tu-color-primary,
      $tu-color-primary-dark
    );
  }

  @include m(success) {
    @include button-fill(
      $tu-color-success-light,
      $tu-color-success,
      $tu-color-success-dark
    );
  }

  @include m(warning) {
    @include button-fill(
      $tu-color-warning-light,
      $tu-color-warning,
      $tu-color-warning-dark
    );
  }

  @include m(danger) {
    @include button-fill(
      $tu-color-danger-light,
      $tu-color-danger,
      $tu-color-danger-dark
    );
  }

  @include m(info) {
    @include button-fill(
      $tu-color-info-light,
      $tu-color-info,
      $tu-color-info-dark
    );
  }

  @include m(mini) {
    padding: map-get($tu-button-padding-map, 'xs');
    font-size: $tu-font-size-xs;

    & [class*='#{$namespace}-icon'] {
      & + span {
        margin-left: map-get($button-icon-gap-map, 'xs');
      }
    }
  }
}
