@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;
@use '../../../style/utils.scss' as *;
@import '../../../style/transition.scss';

$select-option-padding-horizontal-map: (
  mini: 8px,
  small: 10px,
  medium: 12px,
  large: 14px
);

$select-checkbox-size-map: (
  mini: 14px,
  small: 16px,
  medium: 18px,
  large: 20px
);

@include b(popup) {
  @include e(wrapper) {
    background: $tu-color-global-bg;
    width: 100%;
  }
}

@include b(select) {
  @include e(dropdown) {
    box-sizing: border-box;
    box-shadow: $tu-shadow-outside;
    border-radius: $tu-border-radius;

    @include e(dropdown-wrap) {
      overflow-y: auto;
      max-height: 200px;
    }

    @include e(dropdown-list) {
      padding: 0;
      margin: 0;
      list-style: none;
    }

    @include e(dropdown-header) {
      border-bottom: 1px solid $tu-color-line;
    }

    @include e(dropdown-footer) {
      border-top: 1px solid $tu-color-line;
    }

    @include e(dropdown-loading) {
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 80px;
    }

    @each $size in (mini, small, medium, large) {
      @include m($size) {
        @include e(option) {
          font-size: map-get($font-size-map, $size);
          height: map-get($size-map, $size);
          line-height: map-get($size-map, $size);
          padding: 0 map-get($select-option-padding-horizontal-map, $size);
        }

        @include e(option-check) {
          width: map-get($select-checkbox-size-map, $size);
          height: map-get($select-checkbox-size-map, $size);
        }

        @include e(group) {
          font-size: calc(map-get($font-size-map, $size) - 2px);
          height: map-get($size-map, $size);
          line-height: map-get($size-map, $size);
          padding: 0
            calc(map-get($select-option-padding-horizontal-map, $size) - 4px);
        }
      }
    }
  }

  @include e(group) {
    color: $tu-color-text-placeholder;
    margin-top: 8px;
    font-size: calc(map-get($font-size-map, 'medium') - 2px);
    height: map-get($size-map, 'medium');
    line-height: map-get($size-map, 'medium');
    padding: 0
      calc(map-get($select-option-padding-horizontal-map, 'medium') - 4px);

    @include utils-ellipsis;
  }

  @include e(option) {
    display: flex;
    align-items: center;
    color: $tu-color-text;
    cursor: pointer;
    transition: background $tu-transition-duration-2,
      color $tu-transition-duration-2;
    font-size: map-get($font-size-map, 'medium');
    height: map-get($size-map, 'medium');
    line-height: map-get($size-map, 'medium');
    padding: 0 map-get($select-option-padding-horizontal-map, 'medium');

    @include e(option-content) {
      @include utils-ellipsis;
    }

    @include e(option-check) {
      position: relative;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      margin-right: 6px;
      width: map-get($select-checkbox-size-map, 'medium');
      height: map-get($select-checkbox-size-map, 'medium');

      &::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        display: block;
        box-sizing: border-box;
        border-radius: $tu-border-radius;
        border: 1px solid transparent;
        box-shadow: $tu-shadow-outside;
        transition: box-shadow $tu-transition-duration-2;
      }

      &::after {
        content: '';
        position: absolute;
        box-sizing: content-box;
        border: 2px solid $tu-color-text-placeholder;
        border-left: 0;
        border-top: 0;
        height: 50%;
        transform: translate(10%, -10%) rotate(45deg) scaleY(1);
        width: 23%;
        transition: $tu-transition-duration-2 ease;
        transform-origin: center;
        transition: all $tu-transition-duration-2 ease;
      }
    }

    @include when(active) {
      background: $tu-color-hover-bg;
      color: $tu-color-primary;

      @include e(option-check) {
        &::before {
          border-color: $tu-color-shadow-light;
          box-shadow: none;
        }
      }
    }

    @include when(disabled) {
      color: $tu-color-text-placeholder;
      cursor: not-allowed;

      @include e(option-check) {
        &::before {
          cursor: not-allowed;
          opacity: 0.7;
          box-shadow: none;
          background: $tu-color-base-bg;
        }
      }
    }

    @include when(selected) {
      color: $tu-color-primary;

      @include e(option-check) {
        &::before {
          box-shadow: $tu-shadow-inside;
          border: none;
        }

        &::after {
          border-color: $tu-color-primary;
        }
      }
    }
  }
}
