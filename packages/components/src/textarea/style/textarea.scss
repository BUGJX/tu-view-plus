@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;

$textarea-padding-horizontal-map: (
  mini: 6px,
  small: 8px,
  medium: 12px,
  large: 16px
);

$textarea-count-bottom-map: (
  mini: 16px,
  small: 18px,
  medium: 22px,
  large: 24px
);

@include b(textarea) {
  position: relative;
  display: inline-flex;
  width: 100%;
  vertical-align: middle;
  font-size: $tu-font-size;

  &:hover:not(.is-disabled) {
    @include e(inner) {
      box-shadow: none;
      border-color: $tu-color-shadow;
    }
  }

  @include e(inner) {
    position: relative;
    display: block;
    resize: vertical;
    padding: 0 map-get($textarea-padding-horizontal-map, 'medium');
    height: calc(map-get($size-map, 'medium') - 2px);
    line-height: calc(map-get($size-map, 'medium') - 2px);
    box-sizing: border-box;
    width: 100%;
    font-size: inherit;
    font-family: inherit;
    color: $tu-color-text;
    background: transparent;
    background-image: none;
    border-radius: $tu-border-radius;
    transition: box-shadow $tu-transition-duration-3 ease;
    border: 1px solid transparent;
    box-shadow: $tu-shadow-inside;
    -webkit-appearance: none;

    @include scroll-bar;

    &:focus {
      outline: none;
    }

    &::placeholder {
      color: $tu-color-text-placeholder;
    }

    &::-moz-placeholder {
      color: $tu-color-text-placeholder;
    }

    &::-ms-input-placeholder {
      color: $tu-color-text-placeholder;
    }
  }

  @include e((count, icon)) {
    position: relative;
    z-index: 0;
    float: right;
    padding: 0 4px;
    font-size: 12px;
    line-height: 1;
    bottom: 8px;
    right: 12px;
    color: $tu-color-text-placeholder;
    background: $tu-color-global-bg;
  }

  @include e(icon) {
    @include m(clear) {
      cursor: pointer;

      &::before {
        content: '';
        position: absolute;
        z-index: -1;
        top: 50%;
        left: 50%;
        width: map-get($icon-hover-bg-size-map, 'medium');
        height: map-get($icon-hover-bg-size-map, 'medium');
        display: block;
        box-sizing: border-box;
        background-color: transparent;
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: background-color $tu-transition-duration-2;
      }

      &:hover::before {
        background-color: $tu-color-base-bg;
      }
    }
  }

  @include when(disabled) {
    cursor: not-allowed;

    @include e(inner) {
      box-shadow: none;
      opacity: 0.7;
      background-color: $tu-color-base-bg;
      cursor: not-allowed;
    }
  }

  @each $size in (mini, small, medium, large) {
    @include m($size) {
      @include e(inner) {
        font-size: map-get($font-size-map, $size);
        height: calc(map-get($size-map, $size) - 2px);
        line-height: calc(map-get($size-map, $size) - 2px);
      }
      @include e((count, icon)) {
        bottom: map-get($textarea-count-bottom-map, $size);
      }
      @include e(icon) {
        &::before {
          width: map-get($icon-hover-bg-size-map, $size);
          height: map-get($icon-hover-bg-size-map, $size);
        }
      }
    }
  }
}
