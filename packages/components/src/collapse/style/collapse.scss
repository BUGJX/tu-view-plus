@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;

$collapse-padding-vertical-map: (
  mini: 6px,
  small: 10px,
  medium: 14px,
  large: 18px
);
$collapse-padding-horizontal-map: (
  mini: 2px,
  small: 6px,
  medium: 10px,
  large: 14px
);

@include b(collapse) {
  @include m(line) {
    border-top: 1px solid $tu-color-line;
    border-bottom: 1px solid $tu-color-line;
  }

  @include m(neumorphic) {
    box-shadow: $tu-shadow-outside;
  }
}

@include b(collapse-item) {
  @include e(header) {
    display: flex;
    align-items: center;
    line-height: 1;
    color: $tu-color-text;
    cursor: pointer;
    border-bottom: 1px solid $tu-color-line;
    font-size: $tu-font-size;
    transition: border-bottom-color $tu-transition-duration-2;
    outline: none;

    @include e(arrow) {
      transition: transform $tu-transition-duration-2;
      margin-right: 4px;

      @include when(active) {
        transform: rotate(90deg);
      }
    }

    @include when(focus) {
    }

    @include when(active) {
      border-bottom-color: transparent;
    }
  }

  @include e(wrap) {
    will-change: height;
    overflow: hidden;
    box-sizing: border-box;
    border-bottom: 1px solid $tu-color-line;

    @include e(content) {
      padding: 0 12px 24px;
      font-size: $tu-font-size;
      color: $tu-color-text;
      line-height: $tu-line-height-base;
    }
  }

  @include when(disabled) {
    cursor: not-allowed;
  }

  &:last-child {
    margin-bottom: -1px;
  }

  @each $size in (mini, small, medium, large) {
    @include m($size) {
      @include e(header) {
        font-size: map-get($font-size-map, $size);
        padding: map-get($collapse-padding-vertical-map, $size)
          map-get($collapse-padding-horizontal-map, $size);
      }
    }
  }
}
