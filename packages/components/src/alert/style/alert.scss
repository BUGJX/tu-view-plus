@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;

$alert-color-light-map: (
  success: $tu-color-success-light,
  info: $tu-color-info-light,
  warning: $tu-color-warning-light,
  error: $tu-color-danger-light
);

$alert-color-map: (
  success: $tu-color-success,
  info: $tu-color-info,
  warning: $tu-color-warning,
  error: $tu-color-danger
);

$alert-color-dark-map: (
  success: $tu-color-success-dark,
  info: $tu-color-info-dark,
  warning: $tu-color-warning-dark,
  error: $tu-color-danger-dark
);

$alert-padding-vertical-map: (
  mini: 4px,
  small: 6px,
  medium: 9px,
  large: 11px
);

@include b(alert) {
  width: 100%;
  display: flex;
  position: relative;
  margin: 0;
  box-sizing: border-box;
  border-radius: $tu-border-radius;
  overflow: hidden;
  opacity: 1;
  align-items: center;
  color: $tu-color-text;
  transition: opacity $tu-transition-duration-2;
  border: 1px solid transparent;
  line-height: 1;

  @include e(icon-type) {
    display: flex;
    align-items: center;
    margin-right: 2px;
  }

  @include e(content) {
    display: table-cell;
    flex: 1;
    padding: 0 4px;
    line-height: 1;

    @include e(title) {
      line-height: 1;
    }

    @include e(description) {
      font-size: $tu-font-size;
      margin-top: 12px;
    }
  }

  @include e(icon-close) {
    cursor: pointer;
    font-size: $tu-font-size;
    opacity: 0.7;
    transition: opacity $tu-transition-duration-2;

    &:hover {
      opacity: 1;
    }
  }

  @include when(outset) {
    box-shadow: $tu-shadow-outside;
  }

  @include when(inset) {
    box-shadow: $tu-shadow-inside;
  }

  @include when(with-description) {
    align-items: flex-start;

    @include e(icon-type) {
      margin-top: -0.1em;
    }

    @include e(title) {
      font-weight: $tu-font-title-weight;
    }
  }

  @each $type in (success, info, warning, error) {
    @include m($type) {
      background-color: map-get($alert-color-light-map, $type);
      color: map-get($alert-color-dark-map, $type);
      box-shadow: none;

      @include when(dark) {
        background-color: map-get($alert-color-map, $type);
        color: $tu-color-white;

        @include e(icon-close) {
          color: $tu-color-white;
        }
      }

      @include when(plain) {
        color: map-get($alert-color-dark-map, $type);
        background: none;
        border-color: map-get($alert-color-dark-map, $type);

        &::after {
          content: '';
          position: absolute;
          display: block;
          z-index: -1;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          mix-blend-mode: soft-light;
          background-color: map-get($alert-color-dark-map, $type);
        }
      }
    }
  }

  @each $size in (mini, small, medium, large) {
    @include m($size) {
      padding: map-get($alert-padding-vertical-map, $size) 9px;
      font-size: map-get($font-size-map, $size);
    }
  }
}
