@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;

@include b(input-number) {
  position: relative;
  display: inline-flex;
  width: 100%;
  box-sizing: border-box;
  vertical-align: middle;
  height: map-get($size-map, 'medium');
  line-height: map-get($size-map, 'medium');

  @include e((decrease, increase)) {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    z-index: 1;
    top: 1px;
    bottom: 1px;
    width: map-get($size-map, 'medium');
    height: 100%;
    font-size: map-get($font-size-map, 'medium');
    color: $tu-color-text-placeholder;
    cursor: pointer;
    transition: color $tu-transition-duration-2;

    > .#{$namespace}-icon {
      font-size: map-get($font-size-map, 'medium');
    }

    @include when(disabled) {
      cursor: not-allowed;
      color: $tu-color-text-placeholder;
    }

    &:hover:not(.is-disabled) {
      color: $tu-color-text;
    }
  }

  @include e(decrease) {
    left: 1px;
  }

  @include e(increase) {
    right: 1px;
  }

  @include when(without-controls) {
    .#{$namespace}-input__inner {
      padding: 0;
    }
  }

  @include when(controls-at-right) {
    @include e((decrease, increase)) {
      height: calc(map-get($size-map, 'medium') / 2);
      line-height: calc(map-get($size-map, 'medium') / 2);
    }

    @include e(decrease) {
      right: 1px;
      bottom: 1px;
      top: auto;
      left: auto;
    }

    .#{$namespace}-input__inner {
      text-align: left;
      padding-left: 0;
    }
  }

  @each $size in (mini, small, medium, large) {
    @include m($size) {
      height: map-get($size-map, $size);
      line-height: map-get($size-map, $size);

      @include e((decrease, increase)) {
        width: map-get($size-map, $size);
        font-size: map-get($font-size-map, $size);

        > .#{$namespace}-icon {
          font-size: map-get($font-size-map, $size);
        }
      }

      @include when(controls-at-right) {
        @include e((decrease, increase)) {
          height: calc(map-get($size-map, $size) / 2);
          line-height: calc(map-get($size-map, $size) / 2);
        }
      }
    }
  }

  .#{$namespace}-input__inner {
    text-align: center;

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}
