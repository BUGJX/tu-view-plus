@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;

$tree-showline-size-switcher-icon: 14px;

@mixin getIndentLinePos($size) {
  top: 9px - (calc($size / 2) - calc($tree-showline-size-switcher-icon / 2));
  bottom: min(
    -(calc($size / 2) - calc($tree-showline-size-switcher-icon / 2) - 9px),
    0
  );
}

@mixin getLinePos($size) {
  top: calc($size / 2) + calc($tree-showline-size-switcher-icon / 2) + 4px;
  bottom: min(
    -(calc($size / 2) - calc($tree-showline-size-switcher-icon / 2) - 4px),
    0
  );
}

@include b(tree) {
  color: $tu-color-text;

  @include e(node) {
    position: relative;
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    color: $tu-color-text;
    font-size: $tu-font-size;
    height: $tu-size-medium;
    line-height: $tu-size-medium;
    cursor: pointer;

    &:not(.is-disabled) {
      @include e(title) {
        &:hover {
          background-color: $tu-color-hover-bg;
        }
      }

      &:hover {
        @include e(drag-icon) {
          opacity: 1;
        }
      }
    }

    @include e(indent) {
      position: relative;
      flex-shrink: 0;
      align-self: stretch;

      @include e(indent-block) {
        position: relative;
        display: inline-block;
        width: $tree-showline-size-switcher-icon;
        height: 100%;
        margin-right: 6px;
      }
    }

    @include e(switcher) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      align-items: center;
      width: $tree-showline-size-switcher-icon;
      height: $tu-size-medium;
      margin-right: 6px;
      color: $tu-color-text;
      font-size: $tu-font-size;
      cursor: pointer;
      user-select: none;

      @include e(icon-hover) {
        width: 100%;
        height: 100%;
        position: relative;
        margin: 0 auto;
        border-radius: 50%;

        [class*='#{$namespace}-icon'] {
          transition: background-color $tu-transition-duration-3;
          border-radius: 50%;
        }

        &:hover {
          [class*='#{$namespace}-icon'] {
            background-color: $tu-color-hover-bg;
          }
        }

        @include e(switcher-icon) {
          width: 100%;
          height: 100%;
          display: inline-flex;
          align-items: center;
          justify-content: center;

          svg {
            position: relative;
            transform: rotate(-90deg);
            transition: transform $tu-transition-duration-2
              $tu-transition-timing-function-standard;
          }
        }
      }

      @include when(expanded) {
        svg {
          transform: rotate(0);
        }
      }
    }

    @include e(title) {
      position: relative;
      display: flex;
      align-items: center;
      font-size: $tu-font-size;
      border-radius: $tu-border-radius;
      transition: all $tu-transition-duration-2;
      padding: 4px 6px;
      margin: 2px 0;
      line-height: 1;

      @include e(title-text) {
        display: inline-flex;
        align-items: center;

        @include e(drag-icon) {
          display: inline-flex;
          align-items: center;
          justify-content: center;
          opacity: 0;
          margin-left: 10px;
          color: $tu-color-text;
          transition: opacity $tu-transition-duration-2;
        }

        @include e(custom-icon) {
          display: inline-flex;
          align-items: center;
          justify-content: center;
          margin-right: 10px;
        }
      }

      @include m(draggable) {
        &::before {
          content: '';
          position: absolute;
          top: -2px;
          right: 0;
          left: 0;
          display: block;
          height: 2px;
        }
      }

      @include m(gap-bottom) {
        &::before {
          top: unset;
          top: -2px;
          background-color: $tu-color-primary;
        }
      }

      @include m(gap-top) {
        &::before {
          background-color: $tu-color-primary;
        }
      }

      @include m(high-light) {
        color: $tu-color-primary;
        background-color: $tu-color-hover-bg;
      }

      @include m(dragging) {
        color: $tu-color-primary;
        background-color: $tu-color-hover-bg;

        &:hover {
          color: $tu-color-primary;
          background-color: $tu-color-hover-bg;
        }
      }

      @include when(block) {
        flex: 1;
        box-sizing: content-box;

        @include e(drag-icon) {
          position: absolute;
          right: 12px;
        }
      }
    }

    @include when(tail) {
    }

    @include when(expand) {
    }

    @include when(leaf) {
      @include e(switcher) {
        svg {
          transform: rotate(0);
        }
      }
    }

    @include when(selected) {
      @include e(title) {
        background-color: $tu-color-hover-bg;
        color: $tu-color-primary;
      }
    }

    @include when(disabled) {
      @include e(title) {
        color: $tu-color-text-placeholder;
        cursor: not-allowed;
      }
    }
  }

  @include e(node-list) {
    overflow: hidden;
    transition: height $tu-transition-duration-2
      $tu-transition-timing-function-decelerate;
  }

  @include when(show-line) {
    @include e(node) {
      @include e(indent-block) {
        width: $tree-showline-size-switcher-icon;

        &::before {
          content: '';
          position: absolute;
          left: 50%;
          box-sizing: border-box;
          width: 1px;
          border-left: 1px solid $tu-color-line;
          transform: translateX(-50%);

          @include getIndentLinePos($tu-size-medium);
        }

        @include when(lineless) {
          &::before {
            display: none;
          }
        }
      }

      &.is-leaf:not(.is-tail) {
        @include e(indent) {
          &::after {
            content: '';
            position: absolute;
            right: calc($tree-showline-size-switcher-icon / 2) * -1;
            box-sizing: border-box;
            width: 1px;
            border-left: 1px solid $tu-color-line;
            transform: translateX(50%);

            @include getLinePos($tu-size-medium);
          }
        }
      }
    }
  }

  @each $size in (mini, small, medium, large) {
    @include m($size) {
      @include e(node) {
        font-size: map-get($font-size-map, $size);
        height: map-get($size-map, $size);
        line-height: map-get($size-map, $size);

        @include e(title) {
          font-size: map-get($font-size-map, $size);
        }

        & [class*='#{$namespace}-icon'] {
          font-size: map-get($font-size-map, $size);
        }
      }
    }
  }
}
