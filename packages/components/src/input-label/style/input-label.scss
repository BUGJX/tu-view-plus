@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;
@use '../../../style/utils.scss' as *;

$input-label-padding-horizontal-map: (
  mini: 6px,
  small: 8px,
  medium: 12px,
  large: 16px
);

@include b(input-label) {
  position: relative;
  display: inline-flex;
  width: 100%;
  box-sizing: border-box;
  align-items: center;
  border-radius: $tu-border-radius;
  box-shadow: $tu-shadow-inside;
  transition: all $tu-transition-duration-3 ease;
  border: 1px solid transparent;
  border-radius: $tu-border-radius;
  height: map-get($size-map, 'medium');
  padding: 0 map-get($input-label-padding-horizontal-map, 'medium');

  &:hover:not(.is-disabled) {
    box-shadow: none;
    border-color: $tu-color-shadow-light;
  }

  @include e(input) {
    width: 100%;
    height: 100%;
    padding: 0;
    outline: none;
    border: none;
    background: none;
    box-sizing: border-box;
    font-family: inherit;
    color: $tu-color-text;
    -webkit-appearance: none;
    font-size: map-get($font-size-map, 'medium');

    &::placeholder {
      color: $tu-color-text-placeholder;
      font-size: map-get($font-size-map, 'medium');
    }

    &::-moz-placeholder {
      color: $tu-color-text-placeholder;
      font-size: map-get($font-size-map, 'medium');
    }

    &::-ms-input-placeholder {
      color: $tu-color-text-placeholder;
      font-size: map-get($font-size-map, 'medium');
    }

    @include when(hidden) {
      position: absolute;
      width: 0 !important;
    }
  }

  @include e(inner) {
    display: flex;
    align-items: center;
    width: 100%;
    height: 100%;
    font-family: inherit;
    color: $tu-color-text;
    font-size: map-get($font-size-map, 'medium');

    @include utils-ellipsis;

    @include when(hidden) {
      display: none;
    }
  }

  @include when(search) {
    cursor: text;
  }

  @include when(disabled) {
    cursor: not-allowed;
    box-shadow: none;
    opacity: 0.7;
    background-color: $tu-color-base-bg;

    @include e(input) {
      cursor: not-allowed;
    }
  }

  @each $slot in (prefix, suffix) {
    font-size: map-get($font-size-map, 'medium');

    & [class*='#{$namespace}-icon'] {
      font-size: map-get($font-size-map, 'medium');
    }

    @include e($slot) {
      display: inline-flex;
      white-space: nowrap;
      flex-shrink: 0;
      flex-wrap: nowrap;
      align-items: center;
      justify-content: center;
      height: 100%;
      text-align: center;
      color: $tu-color-text-placeholder;
      transition: all $tu-transition-duration-2;

      @if $slot == prefix {
        > :last-child {
          margin-right: 8px;
        }
        > :first-child {
          @include e(icon) {
            margin-left: 0;
          }
        }
      }

      @if $slot == suffix {
        > * {
          margin-left: 8px;
        }
        @include e(icon) {
          @include m((clear)) {
            cursor: pointer;
            transition: color $tu-transition-duration-3;

            &:hover {
              color: $tu-color-text;
            }
          }
        }
      }
    }
  }

  @each $size in (mini, small, medium, large) {
    @include m($size) {
      height: map-get($size-map, $size);
      padding: 0 map-get($input-label-padding-horizontal-map, $size);

      @include e(inner) {
        font-size: map-get($font-size-map, $size);
      }

      @include e(input) {
        font-size: map-get($font-size-map, $size);

        &::placeholder {
          font-size: map-get($font-size-map, $size);
        }

        &::-moz-placeholder {
          font-size: map-get($font-size-map, $size);
        }

        &::-ms-input-placeholder {
          font-size: map-get($font-size-map, $size);
        }
      }

      @include e((prefix, suffix)) {
        font-size: map-get($font-size-map, $size);

        & [class*='#{$namespace}-icon'] {
          font-size: map-get($font-size-map, $size);
        }
      }
    }
  }
}
