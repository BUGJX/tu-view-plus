@use 'sass:map';
@use '../../../style/mixins.scss' as *;
@use '../../../style/var.scss' as *;

$input-label-padding-horizontal-map: (
  mini: 6px,
  small: 8px,
  medium: 12px,
  large: 16px
);

@include b(input-label) {
  position: relative;
  display: inline-flex;
  width: 100%;
  box-sizing: border-box;
  vertical-align: middle;
  border-radius: $tu-border-radius;
  box-shadow: $tu-shadow-inside;
  transition: all $tu-transition-duration-3 ease;
  border: 1px solid transparent;

  &:hover:not(.is-disabled) {
    @include e(wrapper) {
      box-shadow: none;
      border-color: $tu-color-shadow-light;
    }
  }

  @include e(input) {
    background: red;
    width: 100%;
    padding-right: 0;
    padding-left: 0;
    color: inherit;
    background: none;
    border: none;
    border-radius: 0;
    outline: none;
    cursor: inherit;
    -webkit-appearance: none;

    @include when(hidden) {
      position: absolute;
      width: 0 !important;
    }
  }

  @include e(inner) {
    position: relative;
    display: inline-flex;
    flex-grow: 1;
    align-items: center;
    color: $tu-color-text;

    @include when(hidden) {
      display: none;
    }
  }

  @include when(search) {
    cursor: text;
  }

  @each $size in (mini, small, medium, large) {
    @include m($size) {
      font-size: map-get($font-size-map, $size);
      height: map-get($size-map, $size);
      line-height: map-get($size-map, $size);
      padding: map-get($input-label-padding-horizontal-map, $size);

      @include e(input) {
        height: map-get($size-map, $size);
        line-height: map-get($size-map, $size);
      }
    }
  }
}
